# -*- coding: utf-8 -*-
"""Fantasyfootballanalyzer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1M9ljRTP8XSDiJwzdfxknPguyWXdz2TIh
"""
#WORK IN PROGRESS

!pip install nfl_data_py
import nfl_data_py as nfl
import pandas as pd
from sklearn.feature_selection import mutual_info_regression, mutual_info_classif
from sklearn.decomposition import PCA
import tensorflow
import keras
from tensorflow.keras.layers import Dense
from google.colab import drive
drive.mount('/content/drive')

nfl.import_seasonal_data(range(2017,2023))

weekdata = nfl.import_weekly_data(range(2017,2023))

depth_charts = nfl.import_depth_charts(years=range(2017,2023))


weekdata = nfl.import_weekly_data(range(2017,2023))



def MutualInfoAnalysis(position):
  file_name = position+"Stats_2017_to_2022.csv"
  start_col = ""
  end_col = ""
  data = pd.read_csv(file_name)
  if(position == "QB"):
    start_col = "completions"
    end_col = "rushing_epa"
  else:
    start_col = "carries"
    end_col = "wopr"
  selected_columns = data.loc[:, start_col:end_col]
  X = selected_columns.loc[:, selected_columns.notna().all()]
  y = data['fantasy_points_ppr']
  mi = mutual_info_regression(X, y)
  column_names = data.columns[data.columns.get_loc(start_col):data.columns.get_loc(end_col) + 1].tolist()
  print(f'Mutual info analysis for ' + position)
  for metric,miScore in zip(column_names,mi):
    print(f'mi score for {metric}: {miScore}')


def PCA_A(position):
  file_name = position+"Stats_2017_to_2022.csv"
  start_col = ""
  end_col = ""
  data = pd.read_csv(file_name)t
  if(position == "QB"):
    start_col = "completions"
    end_col = "rushing_epa"
  else:
    start_col = "carries"
    end_col = "wopr"
  selected_columns = data.loc[:, start_col:end_col]
  X = selected_columns.loc[:, selected_columns.notna().all()]
  n_components = 2
  pca = PCA(n_components=n_components)
  prin_comps = pca.fit_transform(X)
  print(f'PCA for {position}: {pca.explained_variance_ratio_}')

#mutual info for each position

'''
MutualInfoAnalysis("QB")
MutualInfoAnalysis("RB")
MutualInfoAnalysis("WR")
MutualInfoAnalysis("TE")
'''

#PCA for each position
'''
PCA_A("QB")
PCA_A("RB")
PCA_A("WR")
PCA_A("TE")
'''

def ppr_projection_basic():
  '''
  file_name = position+"Stats_2017_to_2022.csv"
  start_col = ""
  end_col = ""
  data = pd.read_csv(file_name)
  if(position == "QB"):
    start_col = "completions"
    end_col = "rushing_epa"
  else:
    start_col = "carries"
    end_col = "wopr"
  selected_columns = data.loc[:, start_col:end_col]
  X = selected_columns.loc[:, selected_columns.notna().all()]
  y = data['fantasy_points_ppr']
  '''
  model = keras.models.Sequential([Dense(32,activation = 'relu',input_shape=(10,)), Dense(64,activation='relu'), Dense(1, activation='sigmoid')])
  model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])
  model.summary()
  model.fit(X,Y,epochs = 10, batch_size = 32,validaiton_split = .25)

ppr_projection_basic()
